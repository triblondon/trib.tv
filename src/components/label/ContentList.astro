---
import type { ContentItem } from '../../types';

interface Props {
    items: ContentItem[];
    startOffset?: number;
}

const formatDate = (d: string) => new Date(d).toLocaleDateString("en-GB", {
	year: "numeric",
	month: "long",
	day: "numeric",
});
const formatLength = (wc: number) => wc < 500 ? "Short" : wc < 3000 ? "Medium" : "Long"

const { items, startOffset } = Astro.props;
---

<style>
.blog-list {
    display: grid;
    grid-template-columns: min-content auto min-content;
    grid-template-rows: auto;
    gap: 0;

    .blog-item {
        display: contents; /* Fill the grid with the individual elements of each blog post, not the blog-item. */
        > div {
            padding: 18px 12px 8px 12px;
        }
        > .seq {
            grid-row: span 2;
        }
        > .title {
            padding-top: 17px;
            grid-row: span 2;
        }
        > .date {
            white-space: nowrap;
            padding-bottom: 0px;
        }
        > .length {
            padding-top: 0px;
        }
        > .summary {
            grid-column: span 3;
            padding-top: 0px;
            padding-bottom: 18px;
        }
        &:not(:last-child) > .summary {
            border-bottom: 1px dashed black;
        }
    }
}
@media (min-width: 700px) {
    .blog-list {
        grid-template-columns: min-content auto min-content min-content;
        .blog-item {
            > .seq {
                grid-row: span 1;
            }
            > .title {
                grid-row: span 1;
            }
            > .date {
                padding-bottom: 0px;
            }
            > .length {
                padding-top: 18px;
            }
            > .summary {
                grid-column: span 4;
            }
        }
        .draft {
            color: #62ab1b
        }
    }
}
</style>

<div class="blog-list block-links">
    {items.map((item, idx) => (
        <a href={item.url} class:list={["blog-item", { "draft": item.isDraft }]}>
            <div class="seq">{(items.length - idx) + startOffset}</div>
            <div class="title"><h3>{item.title}</h3></div>
            <div class="date">{formatDate(item.pubDate)}</div>
            <div class="length">{formatLength(item.wordCount)}</div>
            <div class="summary">{item.description}</div>
        </a>
    ))}
</div>
